name: Pages

on:
  schedule:
    - cron: '0 14 * * *' # JST 23:00
  workflow_dispatch:
    inputs:
      arxiv_query:
        description: "Override ARXIV_QUERY (optional)"
        required: false
        type: string
      arxiv_max:
        description: "Override ARXIV_MAX (optional)"
        required: false
        type: number
        default: 1
      pool_size:
        description: "ARXIV_POOL_SIZE: pool size to sample from"
        required: false
        type: number
        default: 200
      random_mode:
        description: "ARXIV_RANDOM_MODE: 'daily' or 'true_random'"
        required: false
        type: choice
        options: [daily, true_random]
        default: daily
      site_base_url:
        description: "Override SITE_BASE_URL (optional)"
        required: false
        type: string
      force:
        description: "Force run even if today's post exists"
        required: false
        type: boolean
        default: false
      deploy:
        description: "Deploy to Pages (disable for test runs)"
        required: false
        type: boolean
        default: true
      commit_output:
        description: "Also commit generated public/ to repo for visibility"
        required: false
        type: boolean
        default: false
      qiita_publish:
        description: "Publish to Qiita"
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COMMIT_OUTPUT: ${{ secrets.COMMIT_OUTPUT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci || npm i

      - name: Run pipeline (generate public/)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ARXIV_QUERY: ${{ inputs.arxiv_query || secrets.ARXIV_QUERY }}
          ARXIV_MAX: ${{ inputs.arxiv_max || secrets.ARXIV_MAX || 1 }}
          ARXIV_POOL_SIZE: ${{ inputs.pool_size || secrets.ARXIV_POOL_SIZE || 200 }}
          SITE_BASE_URL: ${{ inputs.site_base_url || secrets.SITE_BASE_URL || format('https://{0}.github.io/{1}', github.repository_owner, github.event.repository.name) }}
          FORCE_RUN: ${{ inputs.force }}
          ARXIV_RANDOM_MODE: ${{ inputs.random_mode || secrets.ARXIV_RANDOM_MODE || 'daily' }}
          # Podcast metadata (improves Spotify/iTunes compatibility)
          PODCAST_TITLE: ${{ secrets.PODCAST_TITLE || 'ArxivCaster' }}
          PODCAST_DESCRIPTION: ${{ secrets.PODCAST_DESCRIPTION || 'Daily summaries of arXiv papers with podcast audio.' }}
          PODCAST_AUTHOR: ${{ secrets.PODCAST_AUTHOR }}
          PODCAST_IMAGE_URL: ${{ secrets.PODCAST_IMAGE_URL || (inputs.site_base_url && format('{0}/cover.png', inputs.site_base_url)) || (secrets.SITE_BASE_URL && format('{0}/cover.png', secrets.SITE_BASE_URL)) }}
          # Qiita publishing
          QIITA_PUBLISH: ${{ inputs.qiita_publish || secrets.QIITA_PUBLISH }}
          QIITA_ACCESS_TOKEN: ${{ secrets.QIITA_ACCESS_TOKEN }}
          QIITA_TAGS: ${{ secrets.QIITA_TAGS }}
          QIITA_PRIVATE: ${{ secrets.QIITA_PRIVATE }}
          QIITA_TITLE_PREFIX: ${{ secrets.QIITA_TITLE_PREFIX }}
        run: npm start

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Commit generated public/ (optional)
        if: ${{ inputs.commit_output || env.COMMIT_OUTPUT == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/
          if ! git diff --cached --quiet; then
            git commit -m "chore: update generated public artifacts"
            git push
          else
            echo "No changes to commit."
          fi

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Deploy to GitHub Pages
        id: deployment
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.deploy }}
        uses: actions/deploy-pages@v4
